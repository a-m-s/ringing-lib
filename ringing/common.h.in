// -*- C++ -*- common.h.in - Common macros and so on.
// Copyright (C) 2001 Martin Bright <M.Bright@dpmms.cam.ac.uk>

// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation; either version 2 of the License, or
// (at your option) any later version.

// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.

// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software
// Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

// ******** INSTRUCTIONS
// This file is turned into common.h by the configure script.
// If you are editing this file by hand, you should change everything
// indicated by ***.  The expression @VARIABLE@ should be replaced by
// the value appropriate for your system.

// When using Microsoft Visual C++ 5, the following options seem to work:
//  #define RINGING_OLD_INCLUDES 0
//  #define RINGING_OLD_C_INCLUDES 0
//  #define RINGING_USE_EXCEPTIONS 1
//  #define RINGING_USE_NAMESPACES 0
//  #define RINGING_USE_STD 1
//  #define RINGING_USE_TEMPLATE_FUNCTION_SPECIALISATION 1
//  #define RINGING_PREMATURE_MEMBER_INSTANTIATION 1

// In Microsoft Visual C++ 6 and the beta releases of Visual C++ 7, the 
// following options work:
//  #define RINGING_OLD_INCLUDES 0
//  #define RINGING_OLD_C_INCLUDES 0
//  #define RINGING_USE_EXCEPTIONS 1
//  #define RINGING_USE_NAMESPACES 1
//  #define RINGING_USE_STD 1
//  #define RINGING_USE_TEMPLATE_FUNCTION_SPECIALISATION 1
//  #define RINGING_PREMATURE_MEMBER_INSTANTIATION 0


// $Id$

#ifndef RINGING_COMMON_H
#define RINGING_COMMON_H

// *** Define this to be the name of the package (i.e. ringing-lib)
// #define RINGING_PACKAGE ringing-lib
#define RINGING_PACKAGE "@PACKAGE@"

// *** Define this to be the version number of the package
// #define RINGING_VERSION 0.2.4
#define RINGING_VERSION "@VERSION@"

// *** Define this to be 1 to use old-style standard C++ header names
// (<iostream.h>, <list.h> and so on) or 0 to use new-style ones
// (<iostream>, <list>).
#define RINGING_OLD_INCLUDES @RINGING_OLD_INCLUDES@

// *** Define this to be 1 to use old-style standard C header names
// (<stdio.h> and so on) or 0 to use new-style ones (<cstdio>).
#define RINGING_OLD_C_INCLUDES @RINGING_OLD_C_INCLUDES@

// *** Define this to be 1 if you want the Ringing Class Library to use
// exceptions, or 0 otherwise.
#define RINGING_USE_EXCEPTIONS @RINGING_USE_EXCEPTIONS@

// *** Define this to be 1 if you want the Ringing Class Library to put
// its definitions in a namespace called `ringing', or 0 otherwise.
#define RINGING_USE_NAMESPACES @RINGING_USE_NAMESPACES@

// *** Define this to be 1 if your standard include files (as indicated above
// by RINGING_HEADER_EXT) place their definitions in namespace `std', or 0
// if the definitions are in the global namespace.
#define RINGING_USE_STD @RINGING_USE_STD@

// *** Define this to be 1 if your compiler supports specialisation of 
// template functions, or 0 if it does not.
#define RINGING_USE_TEMPLATE_FUNCTION_SPECIALISATION @RINGING_USE_TEMPLATE_FUNCTION_SPECIALISATION@

// *** Define this to be 1 if your compiler prematurely instantiates the 
// definitions of member functions (as well as their declarations) when
// it implicitly instantiates a class, or 0 otherwise.
#define RINGING_PREMATURE_MEMBER_INSTANTIATION @RINGING_PREMATURE_MEMBER_INSTANTIATION@

// *** Define this to be 1 if the Ringing Class Library is to be used as a 
// Windows dll, or 0 if you wish to use it as a static Windows library.
// (Should be 0 on non-Windows systems.)
#define RINGING_AS_DLL 0


// Macros to wrap up various constructs that are not portable
#define RINGING_INSIDE_COMMON_H
#include <ringing/macros.h>
#undef  RINGING_INSIDE_COMMON_H

#endif

